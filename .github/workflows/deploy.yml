name: deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
      version:
        description: 'Version to deploy (leave empty for latest)'
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}
  VERSION: ${{ inputs.version || 'latest' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH for VM1 (Control Plane)
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VM1_SSH_KEY }}

      - name: Update tags versions
        run: |
          sed -i "s/newTag: .*/newTag: ${{ env.VERSION }}/g" k8s/base/kustomization.yaml
      - name: Copy K8s configs to VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }} 'mkdir -p ~/k8s'
          scp -o StrictHostKeyChecking=no -r k8s/base ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }}:~/k8s/
          scp -o StrictHostKeyChecking=no -r k8s/${{ inputs.environment }} ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }}:~/k8s/

      - name: Update and apply secrets
        run: |
          scp -o StrictHostKeyChecking=no k8s/base/secrets.yaml ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }}:/tmp/
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }} '
            sed -i "s/base64_encoded_secret/${{ secrets.GOOGLE_CLIENT_SECRET }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_id/${{ secrets.GOOGLE_CLIENT_ID }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_key/${{ secrets.GOOGLE_BOOKS_API_KEY }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_secret/${{ secrets.NEXTAUTH_SECRET }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_password/${{ secrets.DATABASE_PASSWORD }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_redis_password/${{ secrets.REDIS_PASSWORD }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_admin_user/${{ secrets.GRAFANA_ADMIN_USER }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_admin_password/${{ secrets.GRAFANA_ADMIN_PASS }}/g" /tmp/secrets.yaml
            sed -i "s/base64_encoded_auth_secret/${{ secrets.AUTH_SECRET }}/g" /tmp/secrets.yaml
            
            sudo k3s kubectl apply -f /tmp/secrets.yaml
            rm /tmp/secrets.yaml
          '

      - name: Apply K8s
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }} '
            sudo k3s kubectl apply -k ~/k8s/base
            sudo k3s kubectl apply -k ~/k8s/${{ inputs.environment }}
          '

      - name: Verify deployments
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }} '
            echo "Verifying deployments..."
            for dep in grafana prometheus postgres redis api web booksearch; do
              sudo k3s kubectl rollout status deployment/$dep -n libshary
            done
          '

      - name: Verify services
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM1_USER }}@${{ secrets.VM1_HOST }} '
            echo "Checking all resources..."
            sudo k3s kubectl get all -n libshary
          '
