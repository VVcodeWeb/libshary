name: build

on:
  workflow_run:
    workflows: ['test']
    types:
      - completed

permissions:
  actions: read
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, web, booksearch]
    name: Build ${{ matrix.service }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install protoc
        run: sudo apt install protobuf-compiler

      - name: Install dependencies
        run: npm ci --cache --prefer-offline && npm install @bufbuild/protobuf

      - name: Run build
        run: npx nx run ${{ matrix.service }}:build:production

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:rootless

      - name: Build Docker image for ${{ matrix.service }} linux/arm64
        run: docker build --platform linux/arm64 -f apps/${{ matrix.service }}/Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/libshary-${{ matrix.service }}:${{ github.sha }} .

      - name: Login to Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and Push Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/libshary-${{ matrix.service }}:${{ github.sha }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/libshary-${{ matrix.service }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/libshary-${{ matrix.service }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/libshary-${{ matrix.service }}:latest
